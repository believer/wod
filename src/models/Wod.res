type rec t = {
  buyInOut: option<(option<WodPart.t>, option<WodPart.t>)>,
  category: option<Category.t>,
  createdAt: string,
  description: option<(option<string>, option<string>)>,
  externalLink: option<(string, string)>,
  id: CUID.t,
  name: option<string>,
  parts: array<WodPart.t>,
  repScheme: option<RepScheme.t>,
  rounds: option<int>,
  scaledParts: option<array<WodPart.t>>,
  timeCap: option<int>,
  wodType: WodType.t,
}

let make = (
  ~createdAt,
  ~parts,
  ~wodType,
  ~buyInOut=None,
  ~category=None,
  ~description=None,
  ~name=None,
  ~externalLink=None,
  ~timeCap=None,
  ~rounds=None,
  ~repScheme=None,
  ~scaledParts=None,
  (),
) => {
  id: CUID.make(),
  buyInOut: buyInOut,
  category: category,
  createdAt: createdAt,
  description: description,
  name: name,
  externalLink: externalLink,
  wodType: wodType,
  timeCap: timeCap,
  rounds: rounds,
  repScheme: repScheme,
  scaledParts: scaledParts,
  parts: parts,
}
